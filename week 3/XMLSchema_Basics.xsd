<?xml version="1.0" encoding="utf-8"?>

<!-- Declaration of the root element of the schema -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://company.com/companyInfo" xmlns="http://company.com/companyInfo" elementFormDefault="qualified">
    <!-- Declaration of the root element of the schema instance (the XML document) -->
    <xs:element name="COMPANY" type="companyInfo">
        <!-- Declaration of a key -->
        <xs:key name="employeeID">
            <!-- Selects the path to the key item -->
            <xs:selector xpath="./employeeList/employee"/>
            <!-- Selects the key item -->
            <xs:field xpath="@empID"/>
        </xs:key>

        <xs:key name="jobID">
            <xs:selector xpath="./careers/job"/>
            <xs:field xpath="@id"/>
        </xs:key>
    </xs:element>

    <!-- Global definition of the complex type companyInfo, used by the element COMPANY -->
    <xs:complexType name="companyInfo">
        <!-- The elements must appear exactly in the same way as described
                inside COMPANY element -->
        <xs:sequence>
            <!-- This is element with simple content (only text) -->
            <xs:element name="name" type="xs:string"/>
            <xs:element name="employeeList" type="companyEmployees"/>
            <xs:element name="careers" type="jobsList"/>

            <!-- This is local declaration of element with complex type -->
            <xs:element name="contact">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="person" type="personInfo"/>
                        <!-- This element can appear 0 or more times in the XML document -->
                        <xs:element name="email" minOccurs="0" maxOccurs="unbounded">
                            <xs:simpleType>
                                <!-- This is a restriction to element email. It should match the regular expression -->
                                <xs:restriction base="xs:string">
                                    <xs:pattern value="[_\-a-zA-Z0-9\.\+]+@[a-zA-Z0-9](\.?[\-a-zA-Z0-9]*[a-zA-Z0-9])*"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                        <xs:element name="phone" minOccurs="0" maxOccurs="unbounded">
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:pattern value="\d{4}-\d{3}-\d{3}"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="companyEmployees">
        <xs:sequence>
            <!-- This element must appear 1 or more times in the XML document -->
            <xs:element name="employee" type="employeeInfo" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>   
    </xs:complexType>

    <xs:complexType name="employeeInfo">
        <!-- The order of the elements below can be mixed -->
        <xs:all>
            <xs:element name="img" type="image"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="sector" type="xs:string"/>
            <xs:element name="hire-date" type="xs:string"/>
            <xs:element name="favProgrammerQuote" type="xs:string" minOccurs="0"/>
        </xs:all>

        <!-- This attribute must be ID (with unique value) -->
        <xs:attribute name="empID" type="xs:ID" use="required"/>
    </xs:complexType>

    <!-- Declaration of notation -->
    <xs:notation name="jpeg" public="image/jpeg" system="view.exe"/>
    <xs:notation name="png" public="image/png" system="view.exe"/> 
    
    <!-- The element img is with complex type.
        It is empty element, but it has attributes, 
        so it is a complex type element with simple content -->
    <xs:complexType name="image"> 
   	   <xs:simpleContent> 
   	   	   <xs:extension base="xs:base64Binary"> 
   	   	   	   <xs:attribute name="src" type="xs:string" use="required"/>
			   <xs:attribute name="type" use="required">
			   		<xs:simpleType>
						<xs:restriction base="xs:NOTATION">
							<xs:enumeration value="png"/>
							<xs:enumeration value="jpeg"/>
						</xs:restriction>
					</xs:simpleType>
			   </xs:attribute> 
   	   	   </xs:extension> 
   	   </xs:simpleContent> 
   </xs:complexType> 

    <xs:complexType name="jobsList">
        <xs:sequence>
            <xs:element name="job" type="jobInfo" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="jobInfo">
        <xs:sequence>
            <xs:element name="position"/>
            <xs:element name="status" type="xs:string"/>
            <xs:element name="modified" type="xs:string"/>
            <xs:element name="salary" type="salaryAmount" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:ID" use="required"/>
    </xs:complexType>

    <xs:simpleType name="salaryAmount">
        <!-- Definition of list of values -->
        <xs:list>
            <xs:simpleType>
                <!-- Definition of union of three simple types -->
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="BGN"/>
                            <xs:enumeration value="$"/>
                            <xs:enumeration value="EU"/>
                        </xs:restriction>
                    </xs:simpleType>

                    <xs:simpleType>
                        <xs:restriction base="xs:decimal">
                            <xs:minExclusive value="0"/>
                        </xs:restriction>
                    </xs:simpleType>

                    <xs:simpleType>
                        <xs:restriction base="xs:decimal">
                            <xs:maxInclusive value="999999"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:list>
    </xs:simpleType>

    <xs:complexType name="personInfo">
        <xs:sequence>
            <xs:element name="first_name" type="xs:string"/>
            <xs:element name="last_name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
